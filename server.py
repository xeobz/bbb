import requests
import json
import uuid
from flask import Flask, request

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ API Bitrix24
BITRIX_URL = "https://inwork.bitrix24.ru/rest/8/fjtuc0gmxac1ife0"
BITRIX_TEMPLATE_FOLDER_ID = "1702"  # ID –ø–∞–ø–∫–∏ —Å —à–∞–±–ª–æ–Ω–∞–º–∏
BITRIX_TEMPLATE_FILE_ID = "1704"  # ID —Ñ–∞–π–ª–∞-—à–∞–±–ª–æ–Ω–∞
BITRIX_REPORT_FOLDER_ID = "666"  # ID –ø–∞–ø–∫–∏ "–û—Ç—á–µ—Ç—ã"
BITRIX_SMART_PROCESS_ID = 1042  # ID —Å–º–∞—Ä—Ç-–ø—Ä–æ—Ü–µ—Å—Å–∞
BITRIX_ITEM_UPDATE_URL = f"{BITRIX_URL}/crm.item.update"
BITRIX_DISK_COPY_URL = f"{BITRIX_URL}/disk.file.copy"
BITRIX_FILE_FIELD = "ufCrm8_1741619470239"  # –ü–æ–ª–µ –¥–ª—è —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ñ–∞–π–ª

app = Flask(__name__)

def copy_template_and_upload(item_id):
    """ –ö–æ–ø–∏—Ä—É–µ—Ç —Ñ–∞–π–ª-—à–∞–±–ª–æ–Ω –≤ –ø–∞–ø–∫—É '–û—Ç—á–µ—Ç—ã' –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–¥–µ–ª–∫—É —Å—Å—ã–ª–∫–æ–π """
    unique_id = uuid.uuid4().hex[:8]  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID
    new_file_name = f"–°—Ü–µ–Ω–∞—Ä–∏–π –ø—Ä–æ–¥–∞–∂_{unique_id}.xlsx"

    # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª –≤ –Ω–æ–≤—É—é –ø–∞–ø–∫—É
    copy_response = requests.post(BITRIX_DISK_COPY_URL, json={
        "id": BITRIX_TEMPLATE_FILE_ID,
        "targetFolderId": BITRIX_REPORT_FOLDER_ID,
        "newName": new_file_name
    })
    
    copy_data = copy_response.json()
    if "result" not in copy_data or not copy_data["result"].get("ID"):
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞: {copy_data}")
        return
    
    new_file_id = copy_data["result"]["ID"]
    new_file_url = copy_data["result"].get("DETAIL_URL", "")

    print(f"‚úÖ –§–∞–π–ª {new_file_name} —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω, ID: {new_file_id}, URL: {new_file_url}")

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–¥–µ–ª–∫—É —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Ñ–∞–π–ª
    update_response = requests.post(BITRIX_ITEM_UPDATE_URL, json={
        "entityTypeId": BITRIX_SMART_PROCESS_ID,
        "id": item_id,
        "fields": {BITRIX_FILE_FIELD: new_file_url}
    })

    if update_response.json().get("result"):
        print(f"‚úÖ –°–¥–µ–ª–∫–∞ {item_id} –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Ñ–∞–π–ª.")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏ {item_id}: {update_response.json()}")

@app.route("/", methods=["GET", "POST"])
def handle_request():
    item_id = request.args.get("item_id") or (request.get_json() or {}).get("item_id")
    if not item_id:
        return "‚ùå –û—à–∏–±–∫–∞: –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω item_id", 400
    
    print(f"üîÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–¥–µ–ª–∫–∏ {item_id}")
    copy_template_and_upload(item_id)
    
    return f"‚úÖ –®–∞–±–ª–æ–Ω —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–¥–µ–ª–∫—É {item_id}"

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8080)
